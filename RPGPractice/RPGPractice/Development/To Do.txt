RPG Project to do:
	Store Mobs in List instead of array
	Dragon special attacks
	GameEngine
		endgame
			game over
				Display results (rounds lasted)
				Display leaderboard button
			victory
				save data to file
					just update save data before each battle
					new file for each game
				start a new battle
		after battle
			heal all Heroes
	Refactor:
		Setup comments with consistent layout
			Use XML tags
				Add explanations for parameters and returns
			Look into other XML tags and see if theres other ways to add clarity
		Put in more data validation rather than assumptions
			make sure numbers are in range (for instance > 0 for Roll class)
			check for Null
		Clear all yellow warnings if possible
		Break large methods down into smaller parts
			some methods got kidn of big.
		Set consistent Method organization across classes
		redo indenting
	Enemy decision making
		Orc
			attack whoever attacked last, otherwise attack random.
		Dragon
			decide type of attack:
				breath attack: (targets one)
					if high on health
						attack random
					if below half health
						attack hardest hitter
				swipe attack:  (targets all)
					seperate attack for ALL targets

Future ideas:
	for EncounterData return whether Mob is treated as a Boss
		(first interaction should be)
		modify encounterdata to handle differently if adding a boss
			perhaps also pass max number of minions?
			OR generate a new encounter with the minions first (maxMobs -1 so theres room for boss), but add in the Boss?
			or something else?		
	make instructions for creating a new Mob/Enemy/Hero class somehow (stuff not already covered by abstract)
		add the new class to the appropriate enum for instance
		explain any existing interfaces/abstract subclasses
		must include EncounterData static class for enemies
		modify Encounter generation to include new Enemy class
		possibly an interface for spellcasting
	have Encounter populate using a Dictionary for each EnemyType instead of having to enter manually
		see dictionary branch for attempted implementation
	look up naming conventions for:
		enums
		interfaces
		object classes
		subclasses
	setup Boss subclass for NPC
		dragon implements Boss
		have minion count for each boss
		in Encounter
			setup logic so that number of minions is limited by minion count
				though increment minion count at higher combat levels
	Set better way of handling UniqueIDs so they are guarunteed to be Unique
		Perhaps a UniqueID class.
	Move Event Management back into event Manager?
			Would need to handle cases such as Battle class needing to unmanage all Mobs
				Or maybe make UnManageAllMobs method in eventManager
				Could do for all Classes, since normally want to manage all existing classes of the same type.
					Just be careful in cases when want SOME members to remain okay. For isntance Unmanaging all mobs when deleting only Enemy Mobs
	improve handling for case when notSupportedException raises too many times in Battle class.
	Have MobData track HP and Mana
		setup Update event to update Gui displays
		in Battlefield add display for each Mob's name, hp, mana(if applicable)
			possibly put into own UserControl
	Actually ROLL initiative instead of using a static value.
		Currently just using static for reliability, and to make things slightly easier on grader
	add Testing (should have done this first, but better late than never)
	Improve Initiative Class
		perhaps use a tree?
		or revisit how to use existing PriorityQueue options in C#
	In save data keep track of more data:
		number of dead Heroes
		number of dead enemies
			count for each type of enemy
		whether a Game over or not
		Possibly XML format or something
	Add Load data option
		load an existing (but not lost) save.
	Darkest Dungeon style, when a Mob dies dont revive it, create a new one.
	Implement spell selection
	GameEngine
		Add character naming and selection
		EndGame
			if Victory
				show new Battle results userControl instead of BattleForm
					show results
					tell user progress has been saved
					tell user progress has been saved
					button to start next battle
					button to start new game
	Implement tutorial for first round
		make skippable
	Add more hero types
		Ranger
		Barbarian
	Add more damage types
		blunt vs slashing
		ranged
	get new Mob sprites
	Make a Caster interface for classes like Mage and Cleric that use magic
	Have names randomized from a text document
	
ONLY AFTER SUBMITTING FINAL Project
	Add story?
	Add dungeon navigation
	Add leveling system